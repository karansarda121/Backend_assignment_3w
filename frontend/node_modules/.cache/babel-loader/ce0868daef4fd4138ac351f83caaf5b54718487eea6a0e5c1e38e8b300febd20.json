{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import api from \"../api/api\";\n// import UserDropdown from \"../components/UserDropdown\";\n// import Leaderboard from \"../components/Leaderboard\";\n// import AddUserForm from \"../components/AddUserForm\";\n\n// const HomePage = () => {\n//   const [users, setUsers] = useState([]);\n//     const [selectedUser, setSelectedUser] = useState(\"\");\n//     const [history, setHistory] = useState([]);\n//       const [lastClaimed, setLastClaimed] = useState(null);\n\n// useEffect(() => {\n//   const interval = setInterval(() => {\n//     const fetchUsers = async () => {\n//         const { data } = await api.get(\"/\");\n//         console.log(data);\n//         setUsers(data);\n//         const { data: historyData } = await api.get(\"/history\");\n//         setHistory(historyData);\n\n//       };\n\n//     fetchUsers();\n//   }, 5000); // Poll every 5 seconds\n\n//   return () => clearInterval(interval);\n// }, []);\n\n//   const handleClaimPoints = async () => {\n//     if (!selectedUser) return alert(\"Please select a user\");\n\n//     const { data } = await api.post(\"/claim\", { userId: selectedUser });\n//     alert(`${data.user.name} earned ${data.points} points`);\n//     setLastClaimed({ name: data.user.name, points: data.points });\n//     setUsers((prev) =>\n//       prev.map((u) => (u._id === data.user._id ? data.user : u))\n//     );\n//     // Refresh history\n//     const { data: historyData } = await api.get(\"/history\");\n//     setHistory(historyData);\n//   };\n\n//   const addUser = async (name) => {\n//     const { data } = await api.post(\"/\", { name });\n//     setUsers((prev) => [...prev, data]);\n//   };\n\n//   return (\n//     <div>\n//       <h1>User Points System</h1>\n//       <UserDropdown\n//         users={users}\n//         selectedUser={selectedUser}\n//         setSelectedUser={setSelectedUser}\n//       />\n//       <button onClick={handleClaimPoints}>Claim Points</button>\n//       <AddUserForm addUser={addUser} />\n//       <Leaderboard users={users} />\n//       <div>\n//         <h2>Claim History</h2>\n//         <ul>\n//           {history.map((item) => (\n//             <li key={item._id}>\n//               {item.userId.name} earned {item.points} points at{\" \"}\n//               {new Date(item.claimedAt).toLocaleString()}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;","map":{"version":3,"names":[],"sources":["C:/Users/karan/OneDrive/Desktop/Backend_assignment/frontend/src/pages/HomePage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import api from \"../api/api\";\r\n// import UserDropdown from \"../components/UserDropdown\";\r\n// import Leaderboard from \"../components/Leaderboard\";\r\n// import AddUserForm from \"../components/AddUserForm\";\r\n\r\n// const HomePage = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//     const [selectedUser, setSelectedUser] = useState(\"\");\r\n//     const [history, setHistory] = useState([]);\r\n//       const [lastClaimed, setLastClaimed] = useState(null);\r\n\r\n// useEffect(() => {\r\n//   const interval = setInterval(() => {\r\n//     const fetchUsers = async () => {\r\n//         const { data } = await api.get(\"/\");\r\n//         console.log(data);\r\n//         setUsers(data);\r\n//         const { data: historyData } = await api.get(\"/history\");\r\n//         setHistory(historyData);\r\n\r\n//       };\r\n      \r\n//     fetchUsers();\r\n//   }, 5000); // Poll every 5 seconds\r\n\r\n//   return () => clearInterval(interval);\r\n// }, []);\r\n\r\n\r\n//   const handleClaimPoints = async () => {\r\n//     if (!selectedUser) return alert(\"Please select a user\");\r\n\r\n//     const { data } = await api.post(\"/claim\", { userId: selectedUser });\r\n//     alert(`${data.user.name} earned ${data.points} points`);\r\n//     setLastClaimed({ name: data.user.name, points: data.points });\r\n//     setUsers((prev) =>\r\n//       prev.map((u) => (u._id === data.user._id ? data.user : u))\r\n//     );\r\n//     // Refresh history\r\n//     const { data: historyData } = await api.get(\"/history\");\r\n//     setHistory(historyData);\r\n//   };\r\n\r\n//   const addUser = async (name) => {\r\n//     const { data } = await api.post(\"/\", { name });\r\n//     setUsers((prev) => [...prev, data]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>User Points System</h1>\r\n//       <UserDropdown\r\n//         users={users}\r\n//         selectedUser={selectedUser}\r\n//         setSelectedUser={setSelectedUser}\r\n//       />\r\n//       <button onClick={handleClaimPoints}>Claim Points</button>\r\n//       <AddUserForm addUser={addUser} />\r\n//       <Leaderboard users={users} />\r\n//       <div>\r\n//         <h2>Claim History</h2>\r\n//         <ul>\r\n//           {history.map((item) => (\r\n//             <li key={item._id}>\r\n//               {item.userId.name} earned {item.points} points at{\" \"}\r\n//               {new Date(item.claimedAt).toLocaleString()}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}