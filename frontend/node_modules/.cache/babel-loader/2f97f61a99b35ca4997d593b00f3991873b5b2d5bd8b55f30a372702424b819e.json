{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\OneDrive\\\\Desktop\\\\Backend_assignment\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import api from \"../api/api\";\n// import UserDropdown from \"../components/UserDropdown\";\n// import Leaderboard from \"../components/Leaderboard\";\n// import AddUserForm from \"../components/AddUserForm\";\n\n// const HomePage = () => {\n//   const [users, setUsers] = useState([]);\n//   const [selectedUser, setSelectedUser] = useState(\"\");\n\n// useEffect(() => {\n//   const interval = setInterval(() => {\n//     const fetchUsers = async () => {\n//       const { data } = await api.get(\"/\");\n//       setUsers(data);\n//     };\n//     fetchUsers();\n//   }, 5000); // Poll every 5 seconds\n\n//   return () => clearInterval(interval);\n// }, []);\n\n//   const handleClaimPoints = async () => {\n//     if (!selectedUser) return alert(\"Please select a user\");\n\n//     const { data } = await api.post(\"/claim\", { userId: selectedUser });\n//     alert(`${data.user.name} earned ${data.points} points`);\n//     setUsers((prev) =>\n//       prev.map((u) => (u._id === data.user._id ? data.user : u))\n//     );\n//   };\n\n//   const addUser = async (name) => {\n//     const { data } = await api.post(\"/\", { name });\n//     setUsers((prev) => [...prev, data]);\n//   };\n\n//   return (\n//     <div>\n//       <h1>User Points System</h1>\n//       <UserDropdown\n//         users={users}\n//         selectedUser={selectedUser}\n//         setSelectedUser={setSelectedUser}\n//       />\n//       <button onClick={handleClaimPoints}>Claim Points</button>\n//       <AddUserForm addUser={addUser} />\n//       <Leaderboard users={users} />\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [lastClaimed, setLastClaimed] = useState(null);\n  const [history, setHistory] = useState([]);\n\n  // Fetch users and history on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data: usersData\n      } = await api.get(\"/\");\n      setUsers(usersData);\n      const {\n        data: historyData\n      } = await api.get(\"/history\");\n      setHistory(historyData);\n    };\n    fetchData();\n  }, []);\n\n  // Claim points\n  const handleClaimPoints = async () => {\n    if (!selectedUser) return alert(\"Please select a user\");\n    const {\n      data\n    } = await api.post(\"/claim\", {\n      userId: selectedUser\n    });\n    alert(`${data.user.name} earned ${data.points} points`);\n    setLastClaimed({\n      name: data.user.name,\n      points: data.points\n    });\n    setUsers(prev => prev.map(u => u._id === data.user._id ? data.user : u));\n\n    // Refresh history\n    const {\n      data: historyData\n    } = await api.get(\"/history\");\n    setHistory(historyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Points Claim System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedUser,\n        onChange: e => setSelectedUser(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select User --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user._id,\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClaimPoints,\n        children: \"Claim Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), lastClaimed && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [lastClaimed.name, \" earned \", lastClaimed.points, \" points in the last claim.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \": \", user.points, \" points\"]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Claim History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: history.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.userId.name, \" earned \", item.points, \" points at\", \" \", new Date(item.claimedAt).toLocaleString()]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"IpxE3nmq6Vv88N5L7gxDGqXhpsQ=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","HomePage","_s","users","setUsers","selectedUser","setSelectedUser","lastClaimed","setLastClaimed","history","setHistory","fetchData","data","usersData","get","historyData","handleClaimPoints","alert","post","userId","user","name","points","prev","map","u","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","item","Date","claimedAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/karan/OneDrive/Desktop/Backend_assignment/frontend/src/pages/HomePage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import api from \"../api/api\";\r\n// import UserDropdown from \"../components/UserDropdown\";\r\n// import Leaderboard from \"../components/Leaderboard\";\r\n// import AddUserForm from \"../components/AddUserForm\";\r\n\r\n// const HomePage = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [selectedUser, setSelectedUser] = useState(\"\");\r\n\r\n// useEffect(() => {\r\n//   const interval = setInterval(() => {\r\n//     const fetchUsers = async () => {\r\n//       const { data } = await api.get(\"/\");\r\n//       setUsers(data);\r\n//     };\r\n//     fetchUsers();\r\n//   }, 5000); // Poll every 5 seconds\r\n\r\n//   return () => clearInterval(interval);\r\n// }, []);\r\n\r\n\r\n//   const handleClaimPoints = async () => {\r\n//     if (!selectedUser) return alert(\"Please select a user\");\r\n\r\n//     const { data } = await api.post(\"/claim\", { userId: selectedUser });\r\n//     alert(`${data.user.name} earned ${data.points} points`);\r\n//     setUsers((prev) =>\r\n//       prev.map((u) => (u._id === data.user._id ? data.user : u))\r\n//     );\r\n//   };\r\n\r\n//   const addUser = async (name) => {\r\n//     const { data } = await api.post(\"/\", { name });\r\n//     setUsers((prev) => [...prev, data]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>User Points System</h1>\r\n//       <UserDropdown\r\n//         users={users}\r\n//         selectedUser={selectedUser}\r\n//         setSelectedUser={setSelectedUser}\r\n//       />\r\n//       <button onClick={handleClaimPoints}>Claim Points</button>\r\n//       <AddUserForm addUser={addUser} />\r\n//       <Leaderboard users={users} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport api from \"../api\";\r\n\r\nconst HomePage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [lastClaimed, setLastClaimed] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n\r\n  // Fetch users and history on mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data: usersData } = await api.get(\"/\");\r\n      setUsers(usersData);\r\n\r\n      const { data: historyData } = await api.get(\"/history\");\r\n      setHistory(historyData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Claim points\r\n  const handleClaimPoints = async () => {\r\n    if (!selectedUser) return alert(\"Please select a user\");\r\n\r\n    const { data } = await api.post(\"/claim\", { userId: selectedUser });\r\n    alert(`${data.user.name} earned ${data.points} points`);\r\n\r\n    setLastClaimed({ name: data.user.name, points: data.points });\r\n    setUsers((prev) =>\r\n      prev.map((u) => (u._id === data.user._id ? data.user : u))\r\n    );\r\n\r\n    // Refresh history\r\n    const { data: historyData } = await api.get(\"/history\");\r\n    setHistory(historyData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Points Claim System</h1>\r\n\r\n      <div>\r\n        <h2>Select a User</h2>\r\n        <select\r\n          value={selectedUser}\r\n          onChange={(e) => setSelectedUser(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select User --</option>\r\n          {users.map((user) => (\r\n            <option key={user._id} value={user._id}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleClaimPoints}>Claim Points</button>\r\n      </div>\r\n\r\n      {lastClaimed && (\r\n        <p>\r\n          {lastClaimed.name} earned {lastClaimed.points} points in the last\r\n          claim.\r\n        </p>\r\n      )}\r\n\r\n      <div>\r\n        <h2>Leaderboard</h2>\r\n        <ol>\r\n          {users.map((user) => (\r\n            <li key={user._id}>\r\n              {user.name}: {user.points} points\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Claim History</h2>\r\n        <ul>\r\n          {history.map((item) => (\r\n            <li key={item._id}>\r\n              {item.userId.name} earned {item.points} points at{\" \"}\r\n              {new Date(item.claimedAt).toLocaleString()}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}