{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import api from \"../api/api\";\n// import UserDropdown from \"../components/UserDropdown\";\n// import Leaderboard from \"../components/Leaderboard\";\n// import AddUserForm from \"../components/AddUserForm\";\n// import History from \"../components/History\";\n\n// const HomePage = () => {\n//   const [users, setUsers] = useState([]);\n//   const [filteredUsers, setFilteredUsers] = useState([]);\n//   const [selectedUser, setSelectedUser] = useState(\"\");\n//   const [history, setHistory] = useState([]);\n//   const [lastClaimed, setLastClaimed] = useState(null);\n//   const [showHistoryModal, setShowHistoryModal] = useState(false); // State to toggle Claim History modal\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       const fetchUsers = async () => {\n//         const { data } = await api.get(\"/\");\n//         setUsers(data);\n//         setFilteredUsers(data); // Initialize filtered users\n//         const { data: historyData } = await api.get(\"/history\");\n//         setHistory(historyData);\n//       };\n//       fetchUsers();\n//     }, 3000); // Poll every 5 seconds\n\n//     return () => clearInterval(interval);\n//   }, [users,history]);\n\n//   const handleClaimPoints = async () => {\n//     if (!selectedUser) return alert(\"Please select a user\");\n\n//     const { data } = await api.post(\"/claim\", { userId: selectedUser });\n//     alert(`${data.user.name} earned ${data.points} points`);\n//     setLastClaimed({ name: data.user.name, points: data.points });\n//     setUsers((prev) =>\n//       prev.map((u) => (u._id === data.user._id ? data.user : u))\n//     );\n\n//     // Refresh history\n//     const { data: historyData } = await api.get(\"/history\");\n//       setHistory(historyData);\n//       setSelectedUser(\"\");\n//   };\n\n//   const addUser = async (name) => {\n//     const { data } = await api.post(\"/\", { name });\n//     setUsers((prev) => [...prev, data]);\n//     setFilteredUsers((prev) => [...prev, data]); // Update filtered users\n//   };\n\n//   return (\n//       <div className=\"bg-gray-50  p-4 pt-6\">\n//       <h1 className=\"text-3xl font-bold text-center text-blue-600 mb-6\">\n//         User Points Dashboard\n//       </h1>\n\n//       {/* Claim History Button */}\n//       <div className=\"text-center \">\n//         <button\n//           onClick={() => setShowHistoryModal(true)}\n//           className=\"bg-blue-500 text-white font-medium px-6 py-2 rounded-lg hover:bg-blue-600 transition\"\n//         >\n//           View Claim History\n//         </button>\n//       </div>\n//       <div />\n\n//       {/* Dashboard Layout */}\n//       <div className=\"flex gap-8\">\n//         {/* Left Section: Leaderboard */}\n//         <div className=\"flex-1 bg-white rounded-lg  \">\n//           <Leaderboard users={users} />\n//         </div>\n\n//         {/* Right Section: Dropdown, Claim Points, and Add User */}\n//         <div className=\"w-1/3 bg-white p-6 shadow-lg rounded-lg max-h-[28rem] mt-32\">\n//           {/* Dropdown */}\n//           <div className=\"mb-6\">\n//             <UserDropdown\n//               users={filteredUsers}\n//               selectedUser={selectedUser}\n//               setSelectedUser={setSelectedUser}\n//             />\n//           </div>\n//           {/* Claim Points Button */}\n//           <button\n//             onClick={handleClaimPoints}\n//             className=\"bg-blue-500 text-white font-medium px-6 py-2 rounded-lg hover:bg-blue-600 transition w-full mb-10\"\n//           >\n//             Claim Points\n//           </button>\n//           {lastClaimed && (\n//             <p className=\"mb-6 text-green-600 font-medium\">\n//               {lastClaimed.name} earned {lastClaimed.points} points in the last\n//               claim.\n//             </p>\n//           )}\n//           {/* Add User Form */}\n//           <AddUserForm addUser={addUser} />\n//         </div>\n//       </div>\n\n//       {/* Claim History Modal */}\n//       {showHistoryModal && (\n//         <History\n//           history={history}\n//           setShowHistoryModal={setShowHistoryModal}\n//         ></History>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default HomePage;","map":{"version":3,"names":[],"sources":["C:/Users/karan/OneDrive/Desktop/Backend_assignment/frontend/src/pages/HomePage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import api from \"../api/api\";\r\n// import UserDropdown from \"../components/UserDropdown\";\r\n// import Leaderboard from \"../components/Leaderboard\";\r\n// import AddUserForm from \"../components/AddUserForm\";\r\n// import History from \"../components/History\";\r\n\r\n// const HomePage = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [filteredUsers, setFilteredUsers] = useState([]);\r\n//   const [selectedUser, setSelectedUser] = useState(\"\");\r\n//   const [history, setHistory] = useState([]);\r\n//   const [lastClaimed, setLastClaimed] = useState(null);\r\n//   const [showHistoryModal, setShowHistoryModal] = useState(false); // State to toggle Claim History modal\r\n\r\n//   useEffect(() => {\r\n//     const interval = setInterval(() => {\r\n//       const fetchUsers = async () => {\r\n//         const { data } = await api.get(\"/\");\r\n//         setUsers(data);\r\n//         setFilteredUsers(data); // Initialize filtered users\r\n//         const { data: historyData } = await api.get(\"/history\");\r\n//         setHistory(historyData);\r\n//       };\r\n//       fetchUsers();\r\n//     }, 3000); // Poll every 5 seconds\r\n\r\n//     return () => clearInterval(interval);\r\n//   }, [users,history]);\r\n\r\n//   const handleClaimPoints = async () => {\r\n//     if (!selectedUser) return alert(\"Please select a user\");\r\n\r\n//     const { data } = await api.post(\"/claim\", { userId: selectedUser });\r\n//     alert(`${data.user.name} earned ${data.points} points`);\r\n//     setLastClaimed({ name: data.user.name, points: data.points });\r\n//     setUsers((prev) =>\r\n//       prev.map((u) => (u._id === data.user._id ? data.user : u))\r\n//     );\r\n\r\n//     // Refresh history\r\n//     const { data: historyData } = await api.get(\"/history\");\r\n//       setHistory(historyData);\r\n//       setSelectedUser(\"\");\r\n//   };\r\n\r\n//   const addUser = async (name) => {\r\n//     const { data } = await api.post(\"/\", { name });\r\n//     setUsers((prev) => [...prev, data]);\r\n//     setFilteredUsers((prev) => [...prev, data]); // Update filtered users\r\n//   };\r\n\r\n//   return (\r\n//       <div className=\"bg-gray-50  p-4 pt-6\">\r\n//       <h1 className=\"text-3xl font-bold text-center text-blue-600 mb-6\">\r\n//         User Points Dashboard\r\n//       </h1>\r\n\r\n//       {/* Claim History Button */}\r\n//       <div className=\"text-center \">\r\n//         <button\r\n//           onClick={() => setShowHistoryModal(true)}\r\n//           className=\"bg-blue-500 text-white font-medium px-6 py-2 rounded-lg hover:bg-blue-600 transition\"\r\n//         >\r\n//           View Claim History\r\n//         </button>\r\n//       </div>\r\n//       <div />\r\n\r\n//       {/* Dashboard Layout */}\r\n//       <div className=\"flex gap-8\">\r\n//         {/* Left Section: Leaderboard */}\r\n//         <div className=\"flex-1 bg-white rounded-lg  \">\r\n//           <Leaderboard users={users} />\r\n//         </div>\r\n\r\n//         {/* Right Section: Dropdown, Claim Points, and Add User */}\r\n//         <div className=\"w-1/3 bg-white p-6 shadow-lg rounded-lg max-h-[28rem] mt-32\">\r\n//           {/* Dropdown */}\r\n//           <div className=\"mb-6\">\r\n//             <UserDropdown\r\n//               users={filteredUsers}\r\n//               selectedUser={selectedUser}\r\n//               setSelectedUser={setSelectedUser}\r\n//             />\r\n//           </div>\r\n//           {/* Claim Points Button */}\r\n//           <button\r\n//             onClick={handleClaimPoints}\r\n//             className=\"bg-blue-500 text-white font-medium px-6 py-2 rounded-lg hover:bg-blue-600 transition w-full mb-10\"\r\n//           >\r\n//             Claim Points\r\n//           </button>\r\n//           {lastClaimed && (\r\n//             <p className=\"mb-6 text-green-600 font-medium\">\r\n//               {lastClaimed.name} earned {lastClaimed.points} points in the last\r\n//               claim.\r\n//             </p>\r\n//           )}\r\n//           {/* Add User Form */}\r\n//           <AddUserForm addUser={addUser} />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Claim History Modal */}\r\n//       {showHistoryModal && (\r\n//         <History\r\n//           history={history}\r\n//           setShowHistoryModal={setShowHistoryModal}\r\n//         ></History>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}